on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

name: Checkout and Create Release Version

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      build: ${{ steps.check-build.outputs.build }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Version
        id: get-version
        run: |
          version=$(curl -s 'https://api.github.com/repos/OpenListTeam/OpenList/releases/latest' | jq -r ".tag_name")
          echo "Current Version: ${version}"
          if [ -z "${version}" ] || [ "${version}" == "null" ]; then
            echo "Failed to get version"
            exit 1
          fi
          echo "version=${version}" >> $GITHUB_ENV
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Check Build
        id: check-build
        run: |
          gh release view ${version} -R ${{ github.repository }} | grep openlist-linux-loong64.tar.gz >/dev/null 2>&1 || echo "build=1" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: check
    runs-on: ubuntu-latest
    if: needs.check.outputs.build == 1
    env:
      version: ${{ needs.check.outputs.version }}
    steps:
      - name: Check Version
        id: get-version
        run: |
          echo "Current Version: ${version}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: OpenListTeam/OpenList
          ref: ${{ env.version }}
          submodules: true

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Setup Zig
        uses: mlugg/setup-zig@v2
        with:
          cache-size-limit: 0

      - name: Get File
        run: |
          WEB_VERSION=$(curl -sSL "https://api.github.com/repos/OpenListTeam/OpenList-Frontend/releases/latest" | jq -r '.tag_name')
          echo "WEB_VERSION=${WEB_VERSION}" >> $GITHUB_ENV
          echo "GHCR_IMAGE=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
          wget -qO- "https://github.com/OpenListTeam/OpenList-Frontend/releases/download/${WEB_VERSION}/openlist-frontend-dist-${WEB_VERSION}.tar.gz" | tar xz -C public/dist
          wget -O ../goreleaser.test https://github.com/${{ github.repository }}/raw/refs/heads/main/.goreleaser.yaml

      - name: Build Binary
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --config ../goreleaser.test --clean --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
